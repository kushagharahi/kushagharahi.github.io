(self.webpackChunkkusha_me=self.webpackChunkkusha_me||[]).push([[743],{8087:(e,o,t)=>{"use strict";t.d(o,{Z:()=>v});var n=t(8081),a=t.n(n),i=t(3645),r=t.n(i),l=t(1667),s=t.n(l),d=new URL(t(7358),t.b),c=new URL(t(1613),t.b),p=new URL(t(8121),t.b),h=new URL(t(1261),t.b),u=new URL(t(6665),t.b),m=r()(a()),g=s()(d),f=s()(c),w=s()(c,{hash:"?#iefix"}),b=s()(p),y=s()(h),k=s()(u,{hash:"#OpenSans"});m.push([e.id,`@font-face{font-family:"SF Display";font-weight:400;src:url(${g})}@font-face{font-family:"Open Sans";font-style:normal;font-weight:400;src:url(${f});src:local("Open Sans"),local("OpenSans"),url(${w}) format("embedded-opentype"),url(${b}) format("woff2"),url(${y}) format("woff"),url(${k}) format("svg")}body{font-family:"Open Sans",Fallback,sans-serif;margin:0;font-family:"Open Sans",sans-serif;line-height:1.5;color:#aaa;background:#1b2431}h2{color:#985e6d}h1,h2,h3,h4,h5,h6{margin-bottom:.5rem}a{color:#985e6d;text-decoration:none}a:hover{text-decoration:underline}.content{margin:0 auto;max-width:900px;padding-top:60px;padding-left:20px;padding-right:20px}@media screen and (max-width: 900px){.content{margin:0 auto;padding-top:45px;padding-left:1vw;padding-right:1vw}}.clearfix{clear:both}.pre{border-left:2px solid #985e6d;padding-left:3px;margin-left:5px}.loading{position:absolute;width:120px;height:120px;z-index:15;top:50%;left:50%;margin:-60px 0 0 -60px}.errorText{color:red}.vaildText{color:#aaa}pre,.shadow{box-shadow:0 3px 5px 0 rgba(0,0,0,.2),0 3px 3px 0 rgba(0,0,0,.14),0 4px 3px -1px rgba(0,0,0,.12);background-color:#1a2332}.hover:hover{background-color:#161e2c}.postDate{display:block;margin-top:-0.5rem;margin-bottom:1rem;color:#9a9a9a}.post{margin:.5em;padding:1em}.post img{max-width:100%}pre{background-color:#000;padding:1em;overflow-x:auto}pre code{overflow-wrap:normal;white-space:pre}code{font-size:1.2em;padding:.2em;line-height:1.6;background-color:#000}a{overflow-wrap:break-word}`,""]);const v=m},8482:(e,o,t)=>{var n='<p><img src="'+t(7091)(t(8936))+'" alt="Visual Studio"/></p>\n<p>I spent a ton of time figuring this out today. We&#39;re in the process of moving from Windows to Macos and this makes .Net dev work a ton easier on Mac. Hope this helps! </p>\n<h3 id="assumptions-made-for-this-tutorial">Assumptions made for this tutorial:</h3>\n<ul>\n<li>VMWare Fusion 8</li>\n<li>Windows 10 VM</li>\n<li>IIS Express/Visual Studio project</li>\n</ul>\n<h3 id="steps">Steps</h3>\n<ul>\n<li>Make sure in your VM&#39;s Settings under <code>Network Adapter</code> is configured to share the ip of the VM with the host computer</li>\n<li>Add an <code>inbound rule</code> to the Windows firewall allowing connections from the port your project starts on</li>\n<li>Run <code>ipconfig</code> in CMD and get the ipv4 address of the Windows box</li>\n<li>Go to <code>$projectDirectory &gt; (this is a hidden folder) .vs &gt; config &gt; applicationhost.config</code> and edit anywhere it says localhost to the ip you copied</li>\n<li>Instead of using localhost:$port you can use ip:$port!</li>\n</ul>\n<p>Done! </p>\n';e.exports=n},3075:(e,o,t)=>{var n='<p><img src="'+t(7091)(t(9339))+'" alt="about this mac"/></p>\n<h3 id="note-this-guide-will-work-for-high-sierra-mojave-and-catalina-mojave-and-catalina-do-not-support-nvidia-gpus-you-will-need-to-use-a-metal-gpu-more-information-at-bottom-of-post-regarding-mojave-and-catalina">Note: This guide will work for High Sierra, Mojave and Catalina. Mojave and Catalina do not support Nvidia GPUs, you will need to use a Metal GPU. More information at bottom of post regarding Mojave and Catalina.</h3>\n<h1 id="hardware-that-matters">Hardware (that matters)</h1>\n<ul>\n<li>Motherboard: <a target="_blank" rel="noreferrer noopener nofollow" href="https://www.asrock.com/mb/Intel/Z77%20Extreme4/">Asrock Z77 Extreme4</a></li>\n<li>CPU: <a target="_blank" rel="noreferrer noopener nofollow" href="https://ark.intel.com/products/65520">Intel i5-3570K</a> Ivy Bridge -- CPU shouldn&#39;t matter since it will be intel with this specific MOBO</li>\n<li>GPU: <a target="_blank" rel="noreferrer noopener nofollow" href="https://www.geforce.com/hardware/desktop-gpus/geforce-gtx-970">Nvidia GTX 970</a></li>\n</ul>\n<p>You need to have mostly the same hardware for this to work. </p>\n<h1 id="installation">Installation</h1>\n<h3 id="bios-update">Bios update</h3>\n<p><a target="_blank" rel="noreferrer noopener nofollow" href="https://www.asrock.com/mb/Intel/Z77%20Extreme4/#BIOS">Download</a> the latest Asrock Z77 Extreme4 bios and flash it (2.90 at the time of this guide)</p>\n<h3 id="macos-bootable-usb">macOS bootable USB</h3>\n<ul>\n<li>You need access to a computer running macOS and a 10gb+ USB drive</li>\n<li>Download <a target="_blank" rel="noreferrer noopener nofollow" href="https://itunes.apple.com/us/app/macos-high-sierra/id1246284741?mt=12&l=en-us&ls=1">High Sierra from the app store</a></li>\n<li>Use <code>Disk Utility</code> to erase the USB drive and format with <code>Mac OS Extended (Journaled)</code> and (if asked) <code>GUID Partition map</code> scheme </li>\n<li>Use the <a target="_blank" rel="noreferrer noopener nofollow" href="https://www.tonymacx86.com/resources/unibeast-8-3-2-high-sierra.383/"><code>tonymacx86</code> High Sierra Unibeast tool</a> to flash the installer to the USB</li>\n<li>Options: UEFI boot mode on Bootloader Configuration, no selection on Graphics Configuration</li>\n</ul>\n<h3 id="installation-1">Installation</h3>\n<ul>\n<li>Boot from the USB </li>\n<li>turn on computer, <code>f11</code> during inital spalsh screen to select USB drive</li>\n<li>At the Clover boot screen choose <code>Boot macOS Installer from USB</code></li>\n<li>Run through the installation, format your drive with <code>Mac OS Extended (Journaled)</code> and GUID Partition map scheme (if asked)</li>\n</ul>\n<p>Congrats you should have a semi working installation at this point!</p>\n<h3 id="resolution-fix">Resolution fix</h3>\n<p>My screen at this point had super low resolution. To fix, I disabled <code>CSM</code> in bios.</p>\n<h3 id="ethernet-fix">Ethernet fix</h3>\n<ul>\n<li>Download <a target="_blank" rel="noreferrer noopener nofollow" href="https://www.tonymacx86.com/attachments/ionetworkingfamily-kext-zip.136513/">IONetworkingFamily.kext</a> \n-- This is the most reliable source I could find, if the link is dead please <a target="_blank" rel="noreferrer noopener nofollow" href="https://kusha.me/contact">contact</a> me and I will rehost it!</li>\n<li>Also download <a target="_blank" rel="noreferrer noopener nofollow" href="https://www.tonymacx86.com/resources/kextbeast.32/">KextBeast</a></li>\n<li>Place both <code>KextBeast</code> and <code>IONetworkingFamily.kext</code> on the desktop and follow the KextBeast instructions to install the kext to <code>/System/Library/Extensions</code></li>\n<li>Reboot</li>\n</ul>\n<h3 id="enabling-bluetooth-for-airpods-magic-keyboardmouse-handoff">Enabling bluetooth for <a target="_blank" rel="noreferrer noopener nofollow" href="https://amzn.to/2WpzgNw">Airpods</a>, <a target="_blank" rel="noreferrer noopener nofollow" href="https://amzn.to/3fteVyh">Magic Keyboard/Mouse</a>, Handoff</h3>\n<p>This <a target="_blank" rel="noreferrer noopener nofollow" href="https://amzn.to/38ZgbGY">$10 USB Bluetooth adapter</a> works well for me. No need for an expensive PCI bluetooth like some enthusiasts claim. My <a target="_blank" rel="noreferrer noopener nofollow" href="https://amzn.to/2WpzgNw">Airpods</a>, <a target="_blank" rel="noreferrer noopener nofollow" href="https://amzn.to/3fteVyh">Magic Keyboard/Mouse</a>, and Handoff from my iPhone work beautifically. </p>\n<h3 id="audio-fix">Audio Fix</h3>\n<ul>\n<li><a target="_blank" rel="noreferrer noopener nofollow" href="https://mackie100projects.altervista.org/download-clover-configurator/">Clover Configurator</a> setup<ul>\n<li>Download <a target="_blank" rel="noreferrer noopener nofollow" href="https://mackie100projects.altervista.org/download-clover-configurator/">Clover Configurator</a> and mount your EFI partition and select your clover plist</li>\n<li>Mount EFI tab &gt; Mount your EFI partition on your hard disk (Not usb!!)</li>\n<li>Home screen button &gt; select your <code>config.plist</code> in <code>EFI/CLOVER/</code></li>\n</ul>\n</li>\n<li>Kexts Installer tab &gt; Select the Lilu and AppleALC (Realtec ALC898 audio fix) kexts and OS Version of 10.13 and press download -- Boot tab &gt; Select nvda_drv=1 (deselect nv_disable=1 if applicable)</li>\n<li>Restart and you should have full audio!</li>\n</ul>\n<h3 id="nvidia-graphics-fix">Nvidia Graphics Fix</h3>\n<ul>\n<li><a target="_blank" rel="noreferrer noopener nofollow" href="https://mackie100projects.altervista.org/download-clover-configurator/">Clover Configurator</a> setup<ul>\n<li>Download <a target="_blank" rel="noreferrer noopener nofollow" href="https://mackie100projects.altervista.org/download-clover-configurator/">Clover Configurator</a> and mount your EFI partition and select your clover plist</li>\n<li>Mount EFI tab &gt; Mount your EFI partition on your hard disk (Not usb!!)</li>\n<li>Home screen button &gt; select your <code>config.plist</code> in <code>EFI/CLOVER/</code></li>\n</ul>\n</li>\n<li>Install the latest nvidia drivers with <a target="_blank" rel="noreferrer noopener nofollow" href="https://github.com/Benjamin-Dobell/nvidia-update">nVidia update</a> and install the latest mac <a target="_blank" rel="noreferrer noopener nofollow" href="https://www.nvidia.com/object/mac-driver-archive.html">CUDA drivers</a>\n(At the time of this guide, I used 5.3.0.0)</li>\n<li>Boot tab &gt; Select nvda_drv=1 (deselect nv_disable=1 if applicable)</li>\n</ul>\n<h3 id="bootloader-fix---boot-without-usb">Bootloader fix - Boot without USB</h3>\n<p>At this point, your installation probably doesn&#39;t work without the bootable USB. </p>\n<ul>\n<li>Download and flash a Linux live USB distro to another USB drive, I used <a target="_blank" rel="noreferrer noopener nofollow" href="https://en.altlinux.org/Rescue">Alt Linux Rescue</a></li>\n<li>Make sure only your macOS hard drive is plugged in for simplicity</li>\n<li>Boot into a linux shell</li>\n<li>Add a bios entry for Clover with <code>efibootmgr -c -L “Clover UEFI” -l “\\EFI\\CLOVER\\CLOVERX64.EFI”</code></li>\n<li>Make it the first bios entry with <code>efibootmgr -o 0000</code></li>\n<li>If you screw this up, no biggie, just do a CMOS reset and try again! You can always fall back to booting from your macOS bootable USB</li>\n</ul>\n<h2 id="congratulations-you-should-have-a-mostly-working-hackintosh-now">Congratulations you should have a mostly working Hackintosh now!</h2>\n<h3 id="mojavecatalina-upgrade-guide">Mojave/Catalina upgrade guide</h3>\n<ul>\n<li>Only thing missing is Nvidia drivers because Apple and Nvidia have some beef and there isn&#39;t a driver made. So when/if(?) Nvidia releases them then this guide should work. </li>\n<li>You can use a <a target="_blank" rel="noreferrer noopener nofollow" href="https://support.apple.com/en-us/HT202239">Metal</a> supported GPU instead of Nvidia. I personally have used a <a target="_blank" rel="noreferrer noopener nofollow" href="https://amzn.to/3h2IWFt">AMD Radeon RX 560</a> GPU to install Mojave and Catalina successfully (via the AppStore and clean installs) using this guide.</li>\n</ul>\n<h3 id="to-do">To-Do</h3>\n<ul>\n<li>Figure out why some USB ports don&#39;t work (Needs a missing Kext)</li>\n</ul>\n';e.exports=n},8454:e=>{e.exports="<p>Hello World. This is my first blog post. This is currently an MVP for a blog I&#39;m building from the ground up.</p>\n<p>--Kusha</p>\n"},8944:(e,o,t)=>{var n='<p><img src="'+t(7091)(t(5201))+'" alt="Git"/></p>\n<p>This is a list I keep of imporant Git commands that I try to keep updated:</p>\n<ul>\n<li><p>Switch branches:</p>\n<ul>\n<li><code>git checkout branch &lt;branch_name&gt;</code></li>\n</ul>\n</li>\n<li><p>Get latest</p>\n<ul>\n<li><code>git pull</code></li>\n</ul>\n</li>\n<li><p>Revert a file to specific commit</p>\n<ul>\n<li><code>git checkout &lt;COMMITNUMBER&gt; &lt;PATH_TO_FILE&gt;</code></li>\n</ul>\n</li>\n<li><p>Commit your files</p>\n<ul>\n<li><code>git commit</code><ul>\n<li><code>-m</code> <msg> to add a message</li>\n<li><code>-a</code> to stage all files</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><p>Move head around </p>\n<ul>\n<li><code>git checkout &lt;sha1&gt;</code></li>\n</ul>\n</li>\n<li><p>Bring head back to date</p>\n<ul>\n<li><code>git checkout &lt;branch&gt;</code></li>\n</ul>\n</li>\n<li><p>Set up kdiff3 as mergetool &amp; difftool</p>\n<ul>\n<li><code>git config --global --add merge.tool kdiff3</code></li>\n<li><code>git config --global --add mergetool.kdiff3.path &quot;$path/to/kdiff&quot;</code></li>\n<li><code>git config --global --add mergetool.kdiff3.trustExitCode false</code></li>\n<li><code>git config --global --add diff.guitool kdiff3</code></li>\n<li><code>git config --global --add difftool.kdiff3.path &quot;$path/to/kdiff&quot;</code></li>\n<li><code>git config --global --add difftool.kdiff3.trustExitCode false</code></li>\n</ul>\n</li>\n<li><p>Merge Conflict</p>\n<ul>\n<li><code>git mergetool</code></li>\n</ul>\n</li>\n<li><p>Add files</p>\n<ul>\n<li><code>git add</code></li>\n</ul>\n</li>\n<li><p>Start git repo</p>\n<ul>\n<li><code>git init</code></li>\n</ul>\n</li>\n<li><p>See existing commits</p>\n<ul>\n<li><code>git log</code></li>\n</ul>\n</li>\n<li><p>Look in git blobs</p>\n<ul>\n<li><code>git cat-file &lt;sha1&gt;</code><ul>\n<li><code>-p</code> for pretty print</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><p>Check git working area</p>\n<ul>\n<li><code>git status</code></li>\n</ul>\n</li>\n<li><p>Check # of objects in git</p>\n<ul>\n<li><code>git count-objects</code></li>\n</ul>\n</li>\n<li><p>Tag a commit</p>\n<ul>\n<li><code>git tag -a &lt;tag name&gt; -m &lt;tag desc&gt;</code></li>\n</ul>\n</li>\n<li><p>Get branches in project</p>\n<ul>\n<li><code>git branch</code></li>\n</ul>\n</li>\n<li><p>Merge in a branch</p>\n<ul>\n<li><code>git merge &lt;branch&gt;</code></li>\n</ul>\n</li>\n<li><p>Rebase branch</p>\n<ul>\n<li><code>git rebase &lt;branch&gt;</code><ul>\n<li>takes lastest shared commit between branches as base</li>\n<li>detaches all commits on working branch after that commit and moves it on top of branch you are rebasing onto</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><p>Stash merge state</p>\n<ul>\n<li><code>git stash merge --no-commit &lt;branch&gt;</code></li>\n</ul>\n</li>\n<li><p>Stop tracking a file</p>\n<ul>\n<li><code>git rm --cached &lt;file&gt;</code></li>\n</ul>\n</li>\n<li><p>To remove all cached files</p>\n<ul>\n<li><code>git rm --cached -r .</code></li>\n<li>Make sure to git add . to readd everything</li>\n</ul>\n</li>\n<li><p>Get a fresh copy of the branch</p>\n<ul>\n<li><code>git reset --hard origin/&lt;branch&gt;</code></li>\n</ul>\n</li>\n<li><p>Checkout remote branch</p>\n<ul>\n<li><code>git fetch</code></li>\n<li><code>git checkout &lt;branch&gt;</code></li>\n</ul>\n</li>\n<li><p>Add new remote </p>\n<ul>\n<li><code>git remote add origin &lt;url&gt;</code></li>\n</ul>\n</li>\n<li><p>Change remote url</p>\n<ul>\n<li><code>git remote set-url origin &lt;url&gt;</code></li>\n</ul>\n</li>\n</ul>\n';e.exports=n},19:(e,o,t)=>{var n=t(7091),a=t(5664),i=t(4112),r='<p><img src="'+n(a)+'" alt="Salesforce logo"/></p>\n<p>Anyone who&#39;s developed with <a target="_blank" rel="noreferrer noopener nofollow" href="https://developer.salesforce.com/platform/dx">Salesforce DX (SFDX)</a> knows that package management via <a target="_blank" rel="noreferrer noopener nofollow" href="https://developer.salesforce.com/docs/atlas.en-us.pages.meta/pages/pages_resources.htm">static resources</a> is a huge pain. Essentially, static resources is for storing content such as JavaScript or images you need to reference elsewhere in Salesforce, like within a lightning component. </p>\n<p>In the case of JavaScript libraries, you <em>have</em> to store them within static resources to be able to reference elsewhere. Manually keeping all your libraries up to date is painful. You gotta manually check for updates, uploading newer libraries and repeat * ∞. Yikes 😳</p>\n<p>Enter <a target="_blank" rel="noreferrer noopener nofollow" href="https://www.npmjs.com/">npm</a> and <a target="_blank" rel="noreferrer noopener nofollow" href="https://yarnpkg.com/en/">yarn</a> JavaScript dependency managment tools. </p>\n<h1 id="how">How?</h1>\n<ol>\n<li>Get either package manager installed and initialize a project in your SFDX directory </li>\n<li>Get the JavaScript packages that you want to utilize in Salesforce installed</li>\n<li>Install <a target="_blank" rel="noreferrer noopener nofollow" href="https://github.com/mysticatea/cpx">cpx</a> using yarn/npm by doing a <code>yarn/npm install cpx --save</code></li>\n</ol>\n<ul>\n<li><code>cpx</code> is a JavaScript tool for file copying. We&#39;ll be using this to move files from <code>node_modules/</code> (where packages are installed), to the <code>staticresources/</code> folder</li>\n</ul>\n<ol start="4">\n<li>Create a folder for your resource within <code>force-app/main/default/staticresources/</code> named $resourceName</li>\n</ol>\n<ul>\n<li>Make sure you don&#39;t commit the contents of this folder to source control, because otherwise what&#39;s the point?</li>\n</ul>\n<ol start="5">\n<li>Create accompanying metadata file in <code>force-app/main/default/staticresources/</code> named <code>$resourceName.resource-meta.xml</code> with the following structure:</li>\n</ol>\n<pre><code>&lt;StaticResource xmlns=&quot;http://soap.sforce.com/2006/04/metadata&quot;&gt;\n    &lt;cacheControl&gt;Private&lt;/cacheControl&gt;\n    &lt;contentType&gt;application/x-zip-compressed&lt;/contentType&gt;\n    &lt;description&gt;$description&lt;/description&gt;\n&lt;/StaticResource&gt;\n</code></pre>\n<ol start="6">\n<li>Write a script in under the <code>scripts: {}</code> section of <code>package.json</code> called <code>copy-$resourceName</code> to copy the contents of the installed package from <code>node_modules/</code> into <code>staticresources/</code></li>\n</ol>\n<ul>\n<li>Here&#39;s an example script to move jquery from <code>node_modules/</code> to <code>staticresources/</code>:</li>\n</ul>\n<pre><code>&quot;copy-jquery&quot;: &quot;cpx \\&quot;node_modules/jquery/dist/jquery.min.js\\&quot; \\&quot;force-app/main/default/staticresources/jQuery/\\&quot;&quot;`\n</code></pre>\n<ol start="7">\n<li>Do a <code>yarn run copy-$resourceName</code> + push to your org and you should see an entry on the Static Resources page under Setup with a new entry!</li>\n</ol>\n<p><img src="'+n(i)+'" alt="jQuery in Static Resources"/></p>\n<p>That&#39;s all! Easy peasy :)</p>\n<p>Learn more about Static Resources here: <a target="_blank" rel="noreferrer noopener nofollow" href="https://trailhead.salesforce.com/en/content/learn/modules/visualforce_fundamentals/visualforce_static_resources">https://trailhead.salesforce.com/en/content/learn/modules/visualforce_fundamentals/visualforce_static_resources</a></p>\n';e.exports=r},918:(e,o,t)=>{var n=t(7091),a=t(646),i=t(1142),r=t(3823),l=t(5998),s=t(6504),d=t(6268),c=t(7627),p='<h3 id="dogwarts">&quot;Dogwarts&quot;</h3>\n<p><img src="'+n(a)+'" alt="A dog dressed as a hogwarts wizard"/>\nPositive Prompt: </p>\n<pre><code>award winning photography, a cute dog in the style of a hogwarts harry potter wizard \n</code></pre>\n<p>Negative Prompt:</p>\n<pre><code>text, watermark\n</code></pre>\n<p>⬛ Base Image\n✅ Refiner Image</p>\n<hr/>\n<h3 id="a-bad-attempt-at-barbenheimer">(a bad attempt at) Barbenheimer</h3>\n<p><img src="'+n(i)+'" alt="Barbie walking away from an explosion"/>\nPositive Prompt: </p>\n<pre><code>award winning photography, realistic barbie doll and a 600 lb roll of film being exploded in an atomic blast \n</code></pre>\n<p>Negative Prompt:</p>\n<pre><code>text, watermark\n</code></pre>\n<p>⬛ Base Image\n✅ Refiner Image</p>\n<hr/>\n<h3 id="melting-computer-in-the-style-of-surrealist-painting-the-persistence-of-memory">Melting Computer in the style of surrealist painting &quot;The Persistence of Memory&quot;</h3>\n<p><img src="'+n(r)+'" alt="melting computers in the style of a salvador dali painting"/>\nPositive Prompt: </p>\n<pre><code>melting computers in the style of salvador dali painting\n</code></pre>\n<p>Negative Prompt:</p>\n<pre><code>text, watermark\n</code></pre>\n<p>⬛ Base Image\n✅ Refiner Image</p>\n<hr/>\n<h3 id="cookie-monster-convertible-photo-shoot">Cookie Monster convertible photo shoot?</h3>\n<p><img src="'+n(l)+'" alt="alt"/>\nPositive Prompt: </p>\n<pre><code>award winning photography, cookie monster from sesame street eating a messy cookie riding fast in a top down convertible car with cookie tires \n</code></pre>\n<p>Negative Prompt:</p>\n<pre><code>text, watermark\n</code></pre>\n<p>⬛ Base Image\n✅ Refiner Image</p>\n<hr/>\n<h3 id="vin-diesel-and-grilled-cheese-a-classic-combo">Vin Diesel and Grilled Cheese. A classic combo</h3>\n<p><img src="'+n(s)+'" alt="alt"/>\nPositive Prompt: </p>\n<pre><code>award winning photography, vin diesel with a bunch of grilled cheese falling onto his face\n</code></pre>\n<p>Negative Prompt:</p>\n<pre><code>text, watermark\n</code></pre>\n<p>⬛ Base Image\n✅ Refiner Image</p>\n<hr/>\n<h3 id="vaporwave-ballerina">Vaporwave Ballerina</h3>\n<p><img src="'+n(d)+'" alt="alt"/>\nPositive Prompt: </p>\n<pre><code>award winning photography, vapor wave aesthetic with dark colors of a ballerina with a glitchy sign lurking in the background\n</code></pre>\n<p>Negative Prompt:</p>\n<pre><code>text, watermark\n</code></pre>\n<p>✅ Base Image\n⬛ Refiner Image</p>\n<hr/>\n<h2 id="how-were-these-made">How were these made?</h2>\n<p>I used <a target="_blank" rel="noreferrer noopener nofollow" href="https://github.com/comfyanonymous/ComfyUI">ComfyUI</a> with <a target="_blank" rel="noreferrer noopener nofollow" href="https://huggingface.co/stabilityai/stable-diffusion-xl-base-1.0">Stable Diffusion XL Base 1.0</a> and <a target="_blank" rel="noreferrer noopener nofollow" href="https://huggingface.co/stabilityai/stable-diffusion-xl-refiner-1.0">Stable Diffusion XL Refiner 1.0</a> to generate these images</p>\n<p>ComfyUI is a UI that allows users to create custom pipelines to run different stable diffusion models.</p>\n<p>You will need somewhat of a beefy graphics card (recommended) or CPU (very slow) to generate these images. I generated these images on an AMD 6850 XT. They took about 7 minute a piece to generate and then run through the refiner. </p>\n<ul>\n<li>Follow the ComfyUI <a target="_blank" rel="noreferrer noopener nofollow" href="https://github.com/comfyanonymous/ComfyUI#windowsprocedure">installation procedure</a>  </li>\n<li>Download the SDXL base and refiner models from Huggingface (the file that ends in <code>.safetensors</code>). I used the ones that don&#39;t have <code>vue</code> in the file name.</li>\n<li>Place the downloaded models in <code>/ComfyUI/models/checkpoints</code></li>\n<li>Run the UI by following the ComfyUI Readme</li>\n<li>Import my workflow JSON <a target="_blank" rel="noreferrer noopener nofollow" href="https://github.com/kushagharahi/comfyui-workflows/blob/main/sdxlworkflow.json">download</a> (NOTE: You may need to change the filenames in the JSON to match the files you downloaded)</li>\n<li>Voila! Enjoy using SDXL! Your screen should look something like this:</li>\n</ul>\n<p><img src="'+n(c)+'" alt="ComfyUI"/></p>\n';e.exports=p},3315:(e,o,t)=>{var n='<p><img src="'+t(7091)(t(6338))+'" alt="root raspbian"/></p>\n<p>This post assumes you&#39;re either on Ubuntu, Windows or macOS. Although most any Linux distro will do but there might be minor differences.</p>\n<h1 id="step-1---flash-your-image-to-an-sd-card">Step 1 - Flash your image to an SD Card</h1>\n<p>Flash your image to an SD Card using your favorite tool or command line utility. My favorite is balena&#39;s <a target="_blank" rel="noreferrer noopener nofollow" href="https://www.balena.io/etcher/">etcher</a>.</p>\n<p>If you&#39;re on Ubuntu, mount the SD Card, and specifically the rootfs partition. Then skip to step 3. </p>\n<p>If you&#39;re on macOS or Windows, continue to step 2 because you will need to use 3rd party software to mount the rootfs partition and then use Docker to pass in the mounted partition into Ubuntu.</p>\n<h1 id="step-2---if-on-macos-or-windows-using-docker-to-mount-the-root-filesystem-partition-in-ubuntu">Step 2 - (If on macOS or Windows) Using Docker to mount the root filesystem partition in Ubuntu</h1>\n<p>You will need a utility to mount the <a target="_blank" rel="noreferrer noopener nofollow" href="https://en.wikipedia.org/wiki/Ext4">ext4</a> root filesystem (rootfs) partition on both macOS and Windows. On Ubuntu (most linux distros) you can skip this step, since ext4 is a known format. I&#39;ve had success using Paragon Software&#39;s extFS software free trial to mount the rootfs partition on macOS. It looks like they offer the same functionality in their Linux File Systems for Windows software.</p>\n<p>Once you have the rootfs partition mounted you will need to use <a target="_blank" rel="noreferrer noopener nofollow" href="https://docker.io">Docker</a> to pass in the mounted partition to an Ubuntu image.</p>\n<p>macOS example</p>\n<pre><code>docker run -v /Volumes/rootfs:/Volumes/rootfs -it ubuntu:latest /bin/bash\n</code></pre>\n<p>Windows example - replace <code>M:\\\\</code> with the drive that your rootfs is mounted on</p>\n<pre><code>docker run -v M:\\\\:/Volumes/rootfs -it ubuntu:latest /bin/bash\n</code></pre>\n<h1 id="step-3---use-qemu-to-boot-the-rootfs-partition">Step 3 - Use QEMU to boot the rootfs partition</h1>\n<p>Once you have your rootfs partition mounted in Ubuntu natively or via Docker you can boot the partition using <a target="_blank" rel="noreferrer noopener nofollow" href="https://en.wikibooks.org/wiki/QEMU">QEMU</a>. <code>QEMU</code> is a <a target="_blank" rel="noreferrer noopener nofollow" href="https://en.wikipedia.org/wiki/Hypervisor">hypervisor</a> that will allow you to boot your rootfs partition as root.</p>\n<p>Install <code>QEMU</code> on your distro&#39;s package manager; on Ubuntu:</p>\n<pre><code>apt-get update &amp;&amp; apt-get install qemu\n</code></pre>\n<p>Copy the static <code>QEMU</code> binary into your partition:</p>\n<pre><code>cp $(which qemu-system-arm) /Volumes/rootfs/usr/bin/\n</code></pre>\n<p>Then use <code>chroot</code> to execute <code>qemu-system-arm</code> compiled for your host architecture, in this case Ubuntu, then <code>qemu-system-arm</code> can execute your PI&#39;s <code>/bin/sh</code> (compiled for arm).</p>\n<pre><code>chroot /Volumes/rootfs/\n</code></pre>\n<p>In this case, what <code>chroot</code> does is allow you to emulate the Pi&#39;s shell (<code>/bin/sh</code>) using <code>qemu-system-arm</code> escapsulated in the rootfs filesystem while preventing interaction with the host filesystem.</p>\n<p>To change the password of the root user (and any other user) run the following in your <code>chroot</code>:</p>\n<pre><code>passwd root\n</code></pre>\n';e.exports=n},3537:(e,o,t)=>{var n=t(7091),a=t(6869),i=t(47),r=t(6821),l=t(4742),s='<p>This blog post is a living documentation of my Wanhao Duplicator 6 / Monoprice Maker Ultimate printer. </p>\n<ul>\n<li><a target="_blank" rel="noreferrer noopener nofollow" href="https://github.com/kushagharahi/wanhao-d6-config/blob/main/printer.cfg">printer.cfg</a> --  Klipper config<ul>\n<li>Bltouch support</li>\n<li>10x10 mesh height map calibration</li>\n<li>Force move Z without homing</li>\n</ul>\n</li>\n<li><a target="_blank" rel="noreferrer noopener nofollow" href="https://github.com/kushagharahi/wanhao-d6-config/blob/main/petg-superslicer-config.ini">petg-superslicer-config.ini</a> -- PETG settings for SuperSlicer<ul>\n<li>Features a prime line after heating from 05, 30 -&gt; 05, 170 -&gt; 07, 170 -&gt; 07, 30<ul>\n<li>This eliminates the need for skirts or brims!</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<p>If you wish to use these configs as a starting point for your Wanhao D6, you may want to consider the modifcations I&#39;ve made. Without mods, the Wanhao D6 is basically unusable (in my opinion)</p>\n<p>Mods:</p>\n<ul>\n<li>OEM enclosure</li>\n<li>Microswiss all metal hotend and slotted heat sink</li>\n<li>Triangle Labs direct drive extruder (mounted with Bondtech machined metal mount and Bondtech PCB holder)<ul>\n<li>Replaced the extruder motor with a pancake motor to prevent build area loss</li>\n<li>42x42x23mm, 1.8 deg. step angle (200 steps/rev), 1A/3.5ohms/4.1V, 13Ncm</li>\n</ul>\n</li>\n<li>BLTouch<ul>\n<li>Mount: <a target="_blank" rel="noreferrer noopener nofollow" href="https://www.thingiverse.com/thing:4108601">https://www.thingiverse.com/thing:4108601</a></li>\n<li>wired to both the z limit connector and analog connector. Power is from the analog connector pins 2 and 3, servo signal is z limit pin 1, and limit function moved to analog pin 1.</li>\n<li>Wiring diagram: <img src="'+n(a)+'" alt="Wiring diagram"/> (<a target="_blank" rel="noreferrer noopener nofollow" href="https://www.thingiverse.com/thing:2483813">taken from dot bob</a>)</li>\n</ul>\n</li>\n<li>Left and right hand mounted 24v 4010 radial fans wired in parallel into PCB fan slot (no build area loss!)<ul>\n<li>Left mount: <a target="_blank" rel="noreferrer noopener nofollow" href="https://www.thingiverse.com/thing:4802449">https://www.thingiverse.com/thing:4802449</a></li>\n<li>Right mount <a target="_blank" rel="noreferrer noopener nofollow" href="https://github.com/kushagharahi/wanhao-d6-config/blob/main/fan_R-holder.stl">is on my github wanhao-d6-config repo (fan_R_holder.stl)</a> -- credit to tqzr from above thingiverse link for sending me the step file<ul>\n<li><img src="'+n(i)+'" alt="fan holder stl"/></li>\n</ul>\n</li>\n</ul>\n</li>\n<li>Silicone boot for hotend -- important to avoid cooling down the hotend and prevent errors: <a target="_blank" rel="noreferrer noopener nofollow" href="https://www.thingiverse.com/thing:2216683">https://www.thingiverse.com/thing:2216683</a> </li>\n<li>Wire management clip for the direct drive mount<ul>\n<li><a target="_blank" rel="noreferrer noopener nofollow" href="https://www.thingiverse.com/thing:3762718">https://www.thingiverse.com/thing:3762718</a></li>\n</ul>\n</li>\n<li>Mirror on top of build plate (removed the buildtak the printer came with)</li>\n</ul>\n<p>Non functional (ish) mods:</p>\n<ul>\n<li>Feet to allow airflow: <a target="_blank" rel="noreferrer noopener nofollow" href="https://www.thingiverse.com/thing:1580480">https://www.thingiverse.com/thing:1580480</a> </li>\n<li>Hole plugs to prevent filament/crap from going to the electronics section: <a target="_blank" rel="noreferrer noopener nofollow" href="https://www.thingiverse.com/thing:2872888">https://www.thingiverse.com/thing:2872888</a></li>\n<li>Steam valve knob: <a target="_blank" rel="noreferrer noopener nofollow" href="https://www.thingiverse.com/thing:3152876">https://www.thingiverse.com/thing:3152876</a> </li>\n<li>Custom crimped 16 pin dumont cable to replace the flat 16 pin IDE cable</li>\n</ul>\n<p>Useful links:</p>\n<ul>\n<li>Mobo PCB overview: <a target="_blank" rel="noreferrer noopener nofollow" href="https://3dprint.wiki/reprap/wanhao/duplicator6/major_components/motherboard">https://3dprint.wiki/reprap/wanhao/duplicator6/major_components/motherboard</a></li>\n<li>Gantry alignment and case modification for holes to be able to remove rods without having to disassemble the whole gantry: <a target="_blank" rel="noreferrer noopener nofollow" href="https://othermod.com/turn-a-monoprice-maker-ultimate-or-wanhao-duplicator-6-into-an-ultimaker-2/">https://othermod.com/turn-a-monoprice-maker-ultimate-or-wanhao-duplicator-6-into-an-ultimaker-2/</a></li>\n<li>General printer tuning: <a target="_blank" rel="noreferrer noopener nofollow" href="https://ellis3dp.com/Print-Tuning-Guide/articles/index_tuning.html">https://ellis3dp.com/Print-Tuning-Guide/articles/index_tuning.html</a></li>\n</ul>\n<p><img src="'+n(r)+'" alt="hot end top"/>\n<img src="'+n(l)+'" alt="hot end bottom"/></p>\n<p>If you have any questions, feel free to <a target="_blank" rel="noreferrer noopener nofollow" href="https://github.com/kushagharahi/wanhao-d6-config/issues">open an issue</a> and I will do my best to help out!</p>\n';e.exports=s},7091:e=>{"use strict";e.exports=function(e,o){return o||(o={}),e?(e=String(e.__esModule?e.default:e),o.hash&&(e+=o.hash),o.maybeNeedQuotes&&/[\t\n\f\r "'=<>`]/.test(e)?'"'.concat(e,'"'):e):e}},743:(e,o,t)=>{"use strict";t.r(o),t.d(o,{default:()=>I});var n=t(6252),a=t(3577),i={class:"post"},r={key:0,class:"postDate"},l={key:1,class:"postDate"},s=["innerHTML"],d=["href"];var c=t(2707);const p={data:function(){return{compiledMarkdown:"",postMetaData:{},iso8601DateCreated:"",iso8601DateModified:"",firstImage:""}},created:function(){var e=this;this.compiledMarkdown=t(8903)("./"+this.$route.params.name+"/post.md"),this.postMetaData=c.filter((function(o){return o.name==e.$route.params.name}))[0],this.firstImage=this.getFirstImage(this.compiledMarkdown),this.setMetaImg(this.firstImage),this.setMetaTags(this.postMetaData.title,this.postMetaData.subtitle),this.iso8601DateCreated=new Date(this.postMetaData.date_posted.replace(/(th |rd |nd )/," ")).toISOString(),this.iso8601DateModified=new Date((this.postMetaData.last_updated?this.postMetaData.last_updated:this.postMetaData.date_posted).replace(/(th |rd |nd )/," ")).toISOString()},methods:{getFirstImage:function(e){var o=(new DOMParser).parseFromString(e,"text/html").getElementsByTagName("img")[0];return null!=o?o.attributes.src.nodeValue:null}}};var h=t(3379),u=t.n(h),m=t(7795),g=t.n(m),f=t(569),w=t.n(f),b=t(3565),y=t.n(b),k=t(9216),v=t.n(k),_=t(4589),x=t.n(_),S=t(8087),M={};M.styleTagTransform=x(),M.setAttributes=y(),M.insert=w().bind(null,"head"),M.domAPI=g(),M.insertStyleElement=v();u()(S.Z,M);S.Z&&S.Z.locals&&S.Z.locals;const I=(0,t(3744).Z)(p,[["render",function(e,o,t,c,p,h){return(0,n.wg)(),(0,n.iD)("div",i,[(0,n._)("h2",null,(0,a.zw)(e.postMetaData.title),1),e.postMetaData.last_updated?((0,n.wg)(),(0,n.iD)("span",r,"Last Updated "+(0,a.zw)(e.postMetaData.last_updated),1)):(0,n.kq)("v-if",!0),e.postMetaData.last_updated?(0,n.kq)("v-if",!0):((0,n.wg)(),(0,n.iD)("span",l,(0,a.zw)(e.postMetaData.date_posted),1)),(0,n._)("div",{innerHTML:e.compiledMarkdown},null,8,s),(0,n._)("a",{target:"_blank",rel:"noopener",href:"https://github.com/kushagharahi/kushagharahi.github.io/tree/rc/src/content/blog/posts/"+e.$route.params.name+"/post.md"},"Suggest a change to this post here! (requires a GitHub account)",8,d),((0,n.wg)(),(0,n.j4)((0,n.LL)("script"),{type:"application/ld+json"},{default:(0,n.w5)((function(){return[(0,n.Uk)(' { "@context": "https://schema.org", "@type": "BlogPosting", "headline": "'+(0,a.zw)(e.postMetaData.title)+'", "datePublished": "'+(0,a.zw)(e.iso8601DateCreated)+'", "image": ["'+(0,a.zw)(e.firstImage)+'"], "dateModified": "'+(0,a.zw)(e.iso8601DateModified)+'", "author": [{ "@type": "Person", "name": "Kusha Gharahi", "url": "https://kusha.me" }] } ',1)]})),_:1}))])}]])},8903:(e,o,t)=>{var n={"./access_localhost_from_vm_in_host_computer/post.md":8482,"./asrock_z77_extreme4_gtx_970_high_sierra_hackintosh/post.md":3075,"./first_blog_post/post.md":8454,"./git_command_line_cheat_sheet/post.md":8944,"./managing_sfdx_static_resources_via_npm_or_yarn/post.md":19,"./playing_with_stable_diffusion_xl/post.md":918,"./reset_the_root_password_raspbian_image/post.md":3315,"./wanhao_d6_config/post.md":3537};function a(e){var o=i(e);return t(o)}function i(e){if(!t.o(n,e)){var o=new Error("Cannot find module '"+e+"'");throw o.code="MODULE_NOT_FOUND",o}return n[e]}a.keys=function(){return Object.keys(n)},a.resolve=i,e.exports=a,a.id=8903},8936:(e,o,t)=>{"use strict";e.exports=t.p+"imgs/584ea43d9f68698a38ba.png"},9339:(e,o,t)=>{"use strict";e.exports=t.p+"imgs/6a996cb6558978f32722.png"},5201:(e,o,t)=>{"use strict";e.exports=t.p+"imgs/2e0c6ccec6d86ea6da7b.png"},4112:(e,o,t)=>{"use strict";e.exports=t.p+"imgs/a1ab00753a22feaa77de.png"},5664:(e,o,t)=>{"use strict";e.exports=t.p+"imgs/681af0c4cc2a45093c14.png"},1142:(e,o,t)=>{"use strict";e.exports=t.p+"imgs/c98bc4f078bd588b4470.png"},7627:(e,o,t)=>{"use strict";e.exports=t.p+"imgs/0ee7ceb5825085ffc0b6.png"},3823:(e,o,t)=>{"use strict";e.exports=t.p+"imgs/c05dcca8db550f0a0000.png"},5998:(e,o,t)=>{"use strict";e.exports=t.p+"imgs/1b164bc5513b9efbffd1.png"},6504:(e,o,t)=>{"use strict";e.exports=t.p+"imgs/cc5e36f80ee97ee169c6.png"},646:(e,o,t)=>{"use strict";e.exports=t.p+"imgs/0a9cd04a38ce0e5abd48.png"},6268:(e,o,t)=>{"use strict";e.exports=t.p+"imgs/06b890d91be6524e6dd5.png"},6338:(e,o,t)=>{"use strict";e.exports=t.p+"imgs/5146f89f11dfd6d3b585.png"},6869:(e,o,t)=>{"use strict";e.exports=t.p+"imgs/35fceed78be0380495d8.png"},47:(e,o,t)=>{"use strict";e.exports=t.p+"imgs/9c661c94f6309359a921.png"},4742:(e,o,t)=>{"use strict";e.exports=t.p+"imgs/b3f19c6cbd4ddc4923bb.png"},6821:(e,o,t)=>{"use strict";e.exports=t.p+"imgs/7af35917a2fb87ef2095.png"},2707:e=>{"use strict";e.exports=JSON.parse('[{"title":"Playing with Stable Diffusion XL 1.0","subtitle":"Seeing what the latest and greatest image generation AI can do. Plus a quick tutorial on how to create your own!","name":"playing_with_stable_diffusion_xl","date_posted":"August 8th 2023"},{"title":"Wanhao Duplicator 6 // Monoprice Maker Ultimate configs","subtitle":"Klipper and SuperSlicer configs + my recommended modifications for the Wanhao D6//MPMU","name":"wanhao_d6_config","date_posted":"June 24th 2023"},{"title":"Reset the root password of a Raspbian image","subtitle":"Don\'t know an user password? Use QEMU to boot the filesystem partition as root to reset it","name":"reset_the_root_password_raspbian_image","date_posted":"Match 28th 2020"},{"title":"Manage SFDX Static Resources via yarn or npm","subtitle":"Stop manually upgrading your Salesforce JavaScript dependencies","name":"managing_sfdx_static_resources_via_npm_or_yarn","date_posted":"February 14th 2019"},{"title":"My High Sierra Hackintosh - Asrock z77 Extreme4 & Nvidia 970","subtitle":"Catalina, Mojave, and High Siera Hackintosh Guide: Asrock z77 Extreme4, i5 3570K, Nvidia 970","name":"asrock_z77_extreme4_gtx_970_high_sierra_hackintosh","date_posted":"November 10th 2018","last_updated":"July 15th 2020"},{"title":"My Git Cheat Sheet","subtitle":"A list of Git commands I keep for reference","name":"git_command_line_cheat_sheet","date_posted":"December 17th 2017"},{"title":"Access .NET app running in Windows VM from host computer using VMWare Fusion 8","subtitle":"Access localhost in VM from your Mac","name":"access_localhost_from_vm_in_host_computer","date_posted":"July 20th 2017"},{"title":"First Blog Post","subtitle":"My \'Hello World\' post","name":"first_blog_post","date_posted":"April 2nd 2016"}]')}}]);